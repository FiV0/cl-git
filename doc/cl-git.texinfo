\input texinfo
@c %**start of header
@setfilename cl-git.info
@settitle Libgit2 Bindings for Common Lisp
@c %**end of header

@dircategory Software development
@direntry
* cl-git: (cl-git). Libgit2 Bindings for Common Lisp
@end direntry

@copying
cl-git a Common Lisp interface to git repositories.
Copyright @copyright{} 2011, 2012 Russell Sim @email{russell.sim@@gmail.com}.

This program is free software: you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this program.  If not, see
@url{http://www.gnu.org/licenses/}.
@end copying


@finalout
@setcontentsaftertitlepage

@titlepage
@title CL-git
@subtitle Libgit2 bindings for Common Lisp
@author Russel Sim
@author Willem Rein Oudshoorn
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@include include/sb-texinfo.texinfo

@node Top, Overview, (dir), (dir)
@top Introduction

@contents

@menu
* Overview::
* CLOS Interface::
* Reference By Class::
* Low Level Functions::
* Function Index::
@end menu

@node Overview, CLOS Interface, Top, Top
@chapter Overview

This library wraps the C library libgit2.  As the name implies it deals with git
and allows you to create/examine and alter git repositories programmatically.

Some knowledge if git is required to make sense of all the concepts.  Also this
being a wrapper around the libgit2 library, the documentation libgit2, which can be foud
at @url{http://libgit2.github.com/libgit2/#HEAD} is very helpfull.

@menu
* Example::
@end menu

@node Example,  , Overview, Overview
@section Example



@node CLOS Interface, Reference By Class, Overview, Top
@chapter CLOS Interface

The interface exposed by libgit2 is basically an object oriented
interface, but expressed in C.  The CLOS interface of cl-git combines
the myriad of functions back into an object oriented structure.

@menu
* Function Name Mapping::
* Object Hierarchy::
* Memory Management::
@end menu

@node  Function Name Mapping, Object Hierarchy, CLOS Interface, CLOS Interface
@section Function Name Mapping

The mapping from libgit2 names to generic functions is roughly as follows,
take the libgit2 name such as @code{git_commit_message}, replace the underscore with a hyphen 
and remove the specific type of object, in this case @samp{commit}.  This yields
in this case @code{git-message} and that is the generic function name.

@node Object Hierarchy, Memory Management, Function Name Mapping, CLOS Interface
@section Object Hierarchy

The object hierarchy for objects in the git database is very simple,
there is one root class called @code{object} and all other objects are
subclasses, one level deep, of this class.  The subclasses are:

@itemize
@item commit
@item tag
@item tree
@item blob (not implemented yet)
@end itemize

There are also objects that are not stored in the git database, such as

@itemize
@item reference
@item index
@item repository
@item config
@end itemize

These items are root classes and do not inherit from @code{object}.

@node Memory Management,  , Object Hierarchy, CLOS Interface
@section Memory Management

TO BE WRITTEN






@node Reference By Class, Low Level Functions, CLOS Interface, Top
@chapter Reference By Class

@menu
* Object::
* Commit::
* Tag::
* Reference::
* Tree::
* Config::
* Repository::
* Commit::
* Revisions::
* Blob::
* Index::
@end menu

@node Object, Commit, Reference By Class, Reference By Class
@section Object

@subsection Generic Functions

The functions listed here are generic in the sense that each
object supports them.

@include include/fun-cl-git-git-id.texinfo
@include include/fun-cl-git-git-lookup.texinfo
@include include/fun-cl-git-git-type.texinfo

@subsection Functions Specialized in Sub Classes

The functions listed here are not supported by object itself but by 
multiple subclasses.  They are listed here to avoid duplication 
of the documentation.  Each subclass that supports them has a reference
to this documentation, or if needed a complete separate section on them.


@include include/fun-cl-git-git-tree.texinfo

@include include/fun-cl-git-git-entries.texinfo
@include include/fun-cl-git-git-entry-by-index.texinfo
@include include/fun-cl-git-git-entry-count.texinfo

@include include/fun-cl-git-git-message.texinfo
@include include/fun-cl-git-git-name.texinfo

@include include/fun-cl-git-git-author.texinfo
@include include/fun-cl-git-git-committer.texinfo

@node Commit, Tag, Object, Reference By Class
@section Commit

@subsection Inherited Functions

@include include/fun-cl-git-git-id.texinfo
@include include/method-cl-git-git-message-nil-commit-commit.texinfo
@include include/method-cl-git-git-author-nil-commit-commit.texinfo
@include include/fun-cl-git-git-committer.texinfo
@include include/method-cl-git-git-tree-nil-commit-commit.texinfo


@subsection Commit Specific Functions

@include include/macro-cl-git-bind-git-commits.texinfo

@include include/fun-cl-git-make-commit.texinfo

@include include/method-cl-git-git-parentcount-nil-commit-commit.texinfo
@include include/method-cl-git-git-parent-oid-nil-commit-commit-index.texinfo
@include include/fun-cl-git-git-parent-oids.texinfo

@node Tag, Reference, Commit, Reference By Class
@section Tag

@include include/fun-cl-git-git-tagger.texinfo
@include include/fun-cl-git-git-target.texinfo
@include include/fun-cl-git-git-type.texinfo


@node  Reference, Tree, Tag, Reference By Class
@section Reference

@include include/fun-cl-git-git-reference-create.texinfo
@include include/fun-cl-git-git-reference-listall.texinfo
@include include/fun-cl-git-git-reference-lookup.texinfo
@include include/fun-cl-git-git-reference-oid.texinfo
@include include/fun-cl-git-git-reference-resolve.texinfo


@node  Tree, Config, Reference, Reference By Class
@section Tree


@node  Config, Repository, Tree, Reference By Class
@section Config

@include include/fun-cl-git-git-config-free.texinfo
@include include/fun-cl-git-git-config-values.texinfo

@node Repository, Commit, Config, Reference By Class
@section Repository

@include include/macro-cl-git-with-repository-index.texinfo
@include include/macro-cl-git-with-repository.texinfo
@include include/fun-cl-git-ensure-repository-exist.texinfo
@include include/fun-cl-git-repository-config.texinfo

@node Commit, Revisions, Repository, Reference By Class
@section Commit

@include include/macro-cl-git-bind-git-commits.texinfo
@include include/fun-cl-git-git-lookup.texinfo
@include include/fun-cl-git-make-commit.texinfo
@include include/fun-cl-git-git-parent-oid.texinfo
@include include/fun-cl-git-git-parent-oids.texinfo
@include include/fun-cl-git-git-parentcount.texinfo
@include include/fun-cl-git-git-tree.texinfo


@node  Revisions, Blob, Commit, Reference By Class
@section Revision

@include include/fun-cl-git-revision-walk.texinfo
@include include/macro-cl-git-with-git-revisions.texinfo
@include include/fun-cl-git-walker-next.texinfo


@node Blob, Index, Revisions, Reference By Class
@section Blob

@include include/fun-cl-git-git-blob-lookup.texinfo
@include include/fun-cl-git-git-blob-raw-size.texinfo

@node  Index,  , Blob, Reference By Class
@section Index

@include include/fun-cl-git-git-index-add.texinfo
@include include/fun-cl-git-git-index-write.texinfo
@include include/fun-cl-git-git-oid-from-index.texinfo


@node Low Level Functions, Function Index, Reference By Class, Top
@chapter Low Level Functions

These functions mostly call directly the underlying C function and 
the code in the CLOS interface is build on top of this. 
They should normally not be called and this section
is only here to document functions that might still be usefull (or are accidentely exported).

@include include/fun-cl-git-git-object-free.texinfo



@node Function Index,  , Low Level Functions, Top
@appendix Function Index

@printindex fn

@bye
