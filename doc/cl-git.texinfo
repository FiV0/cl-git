\input texinfo
@c %**start of header
@setfilename cl-git.info
@settitle Libgit2 Bindings for Common Lisp
@c %**end of header

@dircategory Software development
@direntry
* cl-git: (cl-git). Libgit2 Bindings for Common Lisp
@end direntry

@copying
cl-git a Common Lisp interface to git repositories.
Copyright @copyright{} 2011, 2012 Russell Sim @email{russell.sim@@gmail.com}.

This program is free software: you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this program.  If not, see
@url{http://www.gnu.org/licenses/}.
@end copying


@finalout
@setcontentsaftertitlepage

@titlepage
@title CL-git
@subtitle Libgit2 bindings for Common Lisp
@author Russel Sim
@author Willem Rein Oudshoorn
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@include include/sb-texinfo.texinfo

@node Top, Overview, (dir), (dir)
@top Introduction

@contents

@menu
* Overview::
* CLOS Interface::
* Reference By Class::
* Functions::
* Function Index::
@end menu

@node Overview, CLOS Interface, Top, Top
@chapter Overview

This library wraps the C library libgit2.  As the name implies it deals with git
and allows you to create/examine and alter git repositories programmatically.

Some knowledge if git is required to make sense of all the concepts.  Also this
being a wrapper around the libgit2 library, the documentation libgit2, which can be foud
at @url{http://libgit2.github.com/libgit2/#HEAD} is very helpfull.

@menu
* Example::
@end menu

@node Example,  , Overview, Overview
@section Example



@node CLOS Interface, Reference By Class, Overview, Top
@chapter CLOS Interface

The interface exposed by libgit2 is basically an object oriented
interface, but expressed in C.  The CLOS interface of cl-git combines
the myriad of functions back into an object oriented structure.

@menu
* Function Name Mapping::
* Object Hierarchy::
* Memory Management::
@end menu

@node  Function Name Mapping, Object Hierarchy, CLOS Interface, CLOS Interface
@section Function Name Mapping

The mapping from libgit2 names to generic functions is roughly as follows,
take the libgit2 name such as @code{git_commit_message}, replace the underscore with a hyphen
and remove the specific type of object, in this case @samp{commit}.  This yields
in this case @code{git-message} and that is the generic function name.

@node Object Hierarchy, Memory Management, Function Name Mapping, CLOS Interface
@section Object Hierarchy

The object hierarchy for objects in the git database is very simple,
there is one root class called @code{object} and all other objects are
subclasses, one level deep, of this class.  The subclasses are:

@itemize
@item commit
@item tag
@item tree
@item blob (not implemented yet)
@end itemize

There are also objects that are not stored in the git database, such as

@itemize
@item reference
@item index
@item repository
@item config
@end itemize

These items are root classes and do not inherit from @code{object}.

@node Memory Management,  , Object Hierarchy, CLOS Interface
@section Memory Management

TO BE WRITTEN






@node Reference By Class, Functions, CLOS Interface, Top
@chapter Reference By Class

@menu
* Object::
* Commit::
* Tag::
* Tree::
* Blob::
* Config::
* Reference::
* Index::
* Repository::
@end menu

@node Object, Commit, Reference By Class, Reference By Class
@section Object

@table @code
@item git-id
@xref{Generic-Function git-id}
@item git-lookup
@xref{Generic-Function git-lookup}
@item git-type
@xref{Generic-Function git-type}
@end table

@node Commit, Tag, Object, Reference By Class
@section Commit

@table @code
@item git-author
@xref{Generic-Function git-author}
@item git-committer
@xref{Generic-Function git-committer}
@item git-id
@xref{Generic-Function git-id}
@item git-lookup
@xref{Generic-Function git-lookup}
@item git-message
@xref{Generic-Function git-message}
@item git-parent-oid
@xref{Generic-Function git-parent-oid}
@item git-parentcount
@xref{Generic-Function git-parentcount}
@item git-tree
@xref{Generic-Function git-tree}
@item git-type
@xref{Generic-Function git-type}
@item make-commit
@xref{Function make-commit}
@end table


@node Tag, Tree, Commit, Reference By Class
@section Tag

@table @code
@item git-id
@xref{Generic-Function git-id}
@item git-lookup
@xref{Generic-Function git-lookup}
@item git-message
@xref{Generic-Function git-message}
@item git-name
@xref{Generic-Function git-name}
@item git-tagger
@xref{Generic-Function git-tagger}
@item git-target
@xref{Generic-Function git-target}
@item git-type
@xref{Generic-Function git-type}
@end table


@node  Tree, Blob, Tag, Reference By Class
@section Tree

@table @code
@item git-entry-count
@xref{Generic-Function git-entry-count}
@item git-id
@xref{Generic-Function git-id}
@item git-entry-by-index
@xref{Generic-Function git-entry-by-index}
@item git-oid-from-index
@xref{Function git-oid-from-index}
@item git-lookup
@xref{Generic-Function git-lookup}
@item git-type
@xref{Generic-Function git-type}
@end table


@node Blob, Config, Tree, Reference By Class
@section Blob

@table @code
@item git-id
@xref{Generic-Function git-id}
@item git-lookup
@xref{Generic-Function git-lookup}
@item git-raw-size
@xref{Function git-raw-size}
@item git-raw-content
@xref{Function git-raw-content}
@item git-type
@xref{Generic-Function git-type}
@end table


@node  Config, Reference, Blob, Reference By Class
@section Config

@table @code
@item git-values
@xref{Generic-Function git-values}
@end table

@node  Reference, Index, Config, Reference By Class
@section Reference

@table @code
@item git-reference-lookup
@xref{Function git-reference-lookup}
@item git-resolve
@xref{Function git-resolve}
@item git-reference-list
@xref{Function git-reference-list}
@item git-reference-create
@xref{Function git-reference-create}
@item git-reference-oid
@xref{Function git-reference-oid}
@end table


@node  Index, Repository, Reference, Reference By Class
@section Index

All these functions need to be changed to take an explicit index.
If that is down, it allows us to rename the functions to simpler names.

@table @code
@item git-index-add
@xref{Function git-index-add}
@item git-index-clear
@xref{Function git-index-clear}
@item git-index-write
@xref{Function git-index-write}
@item with-repository-index
@xref{Macro with-repository-index}
@end table



@node Repository,  , Index, Reference By Class
@section Repository

@table @code
@item ensure-repository-exist
@xref{Function ensure-repository-exist}
@item git-repository-config
@xref{Function git-repository-config}
@item with-repository
@xref{Macro with-repository}
@end table




@c @node Low Level Functions, Functions, Reference By Class, Top
@c @chapter Low Level Functions

@c These functions mostly call directly the underlying C function and
@c the code in the CLOS interface is build on top of this.
@c They should normally not be called and this section
@c is only here to document functions that might still be usefull (or are accidentely exported).



@node Functions, Function Index, Reference By Class, Top
@chapter Functions


@include include/fun-cl-git-ensure-repository-exist.texinfo
@include include/fun-cl-git-git-author.texinfo
@include include/fun-cl-git-git-committer.texinfo
@include include/fun-cl-git-git-config-free.texinfo
@include include/fun-cl-git-git-entries.texinfo
@include include/fun-cl-git-git-entry-by-index.texinfo
@include include/fun-cl-git-git-entry-count.texinfo
@include include/fun-cl-git-git-id.texinfo
@include include/fun-cl-git-git-index-add.texinfo
@include include/fun-cl-git-git-index-write.texinfo
@include include/fun-cl-git-git-index-clear.texinfo
@include include/fun-cl-git-git-lookup.texinfo
@include include/fun-cl-git-git-message.texinfo
@include include/fun-cl-git-git-name.texinfo
@include include/fun-cl-git-git-object-free.texinfo
@include include/fun-cl-git-git-oid-from-index.texinfo
@include include/fun-cl-git-git-parent-oid.texinfo
@include include/fun-cl-git-git-parent-oids.texinfo
@include include/fun-cl-git-git-parentcount.texinfo
@include include/fun-cl-git-git-raw-content.texinfo
@include include/fun-cl-git-git-raw-size.texinfo
@include include/fun-cl-git-git-reference-create.texinfo
@include include/fun-cl-git-git-reference-list.texinfo
@include include/fun-cl-git-git-reference-lookup.texinfo
@include include/fun-cl-git-git-reference-oid.texinfo
@include include/fun-cl-git-git-resolve.texinfo
@include include/fun-cl-git-git-tagger.texinfo
@include include/fun-cl-git-git-target.texinfo
@include include/fun-cl-git-git-tree.texinfo
@include include/fun-cl-git-git-type.texinfo
@include include/fun-cl-git-git-values.texinfo
@include include/fun-cl-git-make-commit.texinfo
@include include/fun-cl-git-git-repository-config.texinfo
@include include/fun-cl-git-revision-walk.texinfo
@include include/fun-cl-git-walker-next.texinfo
@include include/macro-cl-git-bind-git-commits.texinfo
@include include/macro-cl-git-with-git-revisions.texinfo
@include include/macro-cl-git-with-repository-index.texinfo
@include include/macro-cl-git-with-repository.texinfo


@c @include include/method-cl-git-git-author-nil-commit-commit.texinfo
@c @include include/method-cl-git-git-message-nil-commit-commit.texinfo
@c @include include/method-cl-git-git-parent-oid-nil-commit-commit-index.texinfo
@c @include include/method-cl-git-git-parentcount-nil-commit-commit.texinfo
@c @include include/method-cl-git-git-tree-nil-commit-commit.texinfo

@node Function Index,  , Functions, Top
@appendix Function Index

@printindex fn

@bye
