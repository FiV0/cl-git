#!/usr/bin/sbcl --script
; -*- mode: Lisp;-*-

(defun ~ (path)
  (merge-pathnames path (user-homedir-pathname)))

(defun quicklisp-path ()
  (or (probe-file (~ ".quicklisp/setup.lisp"))
      (probe-file (~ "quicklisp/setup.lisp"))))

(if (not (quicklisp-path))
    (load "/usr/share/cl-quicklisp/quicklisp.lisp"))

(if (not (quicklisp-path))
    (quicklisp-quickstart:install)
    (when (probe-file (quicklisp-path))
      (load (quicklisp-path))))

;; CFFI grovel is needed for cl-git.asd
(ql:quickload 'cffi)

(push (probe-file #p"./") asdf:*central-registry*)
(ql:quickload 'cl-git)
(ql:quickload 'cl-git/tests)

(defun safe-trace (sym package)
  (handler-bind ((simple-error
                  #'(lambda (c)
                      (format t "Skipping Symbol (probably a macro)~%")
                      (invoke-restart 'skip-symbol))))
    (when (and (fboundp sym)
               (functionp (symbol-function sym))
                                        ;(not (macrop sym))
               (equal (package-name (symbol-package sym))
                      package))
      (format t "Trying to trace Symbol ~A~%" sym)
      (restart-case
          (eval `(trace ,(intern (symbol-name sym) package)))
        (skip-symbol () nil)))))

(use-package 'unix-options)
(with-cli-options ()
    (help trace)
  (when help
    (print-usage-summary
     "Usage:~%~@{~A~%~}"
     '(((#\t "trace") nil "trace the functions during a test run.")))
    (uiop::quit :unix-status 1))
  (when trace
    (do-symbols (sym 'cl-git)
      (safe-trace sym "CL-GIT"))))

(let ((result-list (fiveam:run :cl-git)))
  (fiveam:explain! result-list)
  (uiop:quit
   (if (remove-if-not
        (lambda (res)
          (typep res 'fiveam::test-failure))
        result-list)
       1 0)))
